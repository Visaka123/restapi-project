package com.example.News.Portal.Controller;

import java.util.List;

import org.apache.catalina.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.News.Portal.Entity.Table1;
import com.example.News.Portal.Service.Table1userservice;
@RestController
@RequestMapping("/users")
public class Table1userController {
	@Autowired
	private Table1userservice userService;
    @GetMapping("/alluser")
    public List<Table1> getAllUsers() 
    { 
    	return userService.getAllUsers(); 
    	}
    @PostMapping("/adduser")
    public Table1 addUser(@RequestBody Table1 user)
    { 
    	return userService.addUser(user); 
    	}
    @DeleteMapping("/deleteuser/{id}")
    
    public void deleteUser(@PathVariable Long id)
    { 
    	userService.deleteUser(id);
    	}
    @PutMapping("/updateuser/{id}")
    public Table1 updateUser(@PathVariable Long id, @RequestBody Table1 user)
    {
        return userService.updateUser(id, user);
    }
    @GetMapping("/userpagination")
    public Page<Table1> page(@RequestParam int page, @RequestParam int size) {
        return userService. getUserPage(page, size);
    }

    @GetMapping("/userand")
    public List<Table1> rev(@RequestParam String name, @RequestParam Long mobileno) {
        return userService.getUserByNameAndMobileno(name, mobileno);
    }

    @GetMapping("/userOr")
    public List<Table1> Orr(@RequestParam String name, @RequestParam Long mobileno) {
        return userService.getUserByNameOrMobileno(name, mobileno);
    }

    @GetMapping("/userIn")
    public List<Table1> In(@RequestParam List<String> name) {
        return userService.fetchUsersByNames(name);
    }

    @GetMapping("/userstart")
    public List<Table1> start(@RequestParam String name) {
        return userService.findUserByNameStartingWith(name);
    }

    @GetMapping("/usercontainsdata")
    public List<Table1> contai(@RequestParam String name) {
        return userService.findUserByNameContains(name);
    }
    @GetMapping("/userend")
    public List<Table1> end(@RequestParam String name) {
        return userService.findUserByNameEndingWith(name);
    }
    @GetMapping("/usernotcontains")
    public List<Table1> notcontai(@RequestParam String name) {
        return userService.findUserByNameNotContaining(name);
    }
    @PostMapping("/email")
    public String email(@RequestParam Long id,@RequestParam String receiver,@RequestParam String subject,@RequestParam String Body)
    {
    	return userService.sendmail(id,receiver,subject,Body);
    }
    @PostMapping("/oneToMany")
    public Table1 postUser(@RequestBody Table1 user) {
        return userService.saveUserWithNews(user);
    }
}
