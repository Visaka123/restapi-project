package com.example.News.Portal.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.News.Portal.Entity.Table3;
import com.example.News.Portal.Service.Table2Categoryservice;
@RestController
@RequestMapping("/categories")
public class Table2CategoryController {
	 @Autowired private Table2Categoryservice categoryService;
	    @GetMapping("/allcategory")
	    public List<Table3> getAllCategories() 
	    { 
	    	return categoryService.getAllCategories(); 
	    	}
	    @PostMapping("/addcategory")
	    public Table3 addCategory(@RequestBody Table3 category) 
	    { 
	    	return categoryService.addCategory(category); 
	    	}
	    @DeleteMapping("/deletecategory/{id}")
	    public void deleteCategory(@PathVariable Long id) 
	    { 
	    	categoryService.deleteCategory(id); 
	    	}
	    @PutMapping("/updatecategory/{id}")
	    public Table3 updateCategory(@PathVariable Long id, @RequestBody Table3 categorys) 
	    {
	        return categoryService.updateCategory(id, categorys);
	    }
	    @GetMapping("/categorypagination")
	    public Page<Table3> getCategoryPage(@RequestParam int page, @RequestParam int size) {
	        return categoryService.getCategoryPage(page, size);
	    }

	    @GetMapping("/categoryand")
	    public List<Table3> getCategoryByAnd(@RequestParam Long id, @RequestParam String category) {
	        return categoryService.getCategoryByIdAndCategory(id, category);
	    }
	    
	    @GetMapping("/categoryIn")
	    public List<Table3> fetchCategoriesBy(@RequestParam List<String> category) {
	        return categoryService.fetchCategoriesByCategory(category);
	    }

	    @GetMapping("/categorystart")
	    public List<Table3> findCategoryByCategory(@RequestParam String category) {
	        return categoryService.findCategoryByNameStartingWith(category);
	    }

	    @GetMapping("/categorycontainsdata")
	    public List<Table3> findCategoryByNameContains(@RequestParam String category) {
	        return categoryService.findCategoryByNameContains(category);
	    }
	}


